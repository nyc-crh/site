name: Deploy to web

on:
  push:
    branches:
      - main # or whatever you call your production branch

env:
  HUGO_VERSION: 0.114.0 # will get Extended Version below
  DART_SASS_VERSION: 1.63.5
  # if you have other environment variables,
  # enter them here in similar fashion

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout default branch
        uses: actions/checkout@v3
      - name: Download Hugo v${{ env.HUGO_VERSION }}
        run: wget https://github.com/gohugoio/hugo/releases/download/v${{ env.HUGO_VERSION }}/hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb -O hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb
      - name: Install Hugo v${{ env.HUGO_VERSION }}
        run: sudo dpkg -i hugo*.deb
      - name: Download Dart Sass v${{ env.DART_SASS_VERSION }}
        run: curl -LJO https://github.com/sass/dart-sass/releases/download/${{ env.DART_SASS_VERSION }}/dart-sass-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
      - name: Unpack Dart Sass v${{ env.DART_SASS_VERSION }}
        run: |
          tar -xvf dart-sass-${{ env.DART_SASS_VERSION }}-linux-x64.tar.gz
          dart-sass/sass --embedded --version          
      - name: Add to the PATH
        run: echo "$GITHUB_WORKSPACE/dart-sass" >> $GITHUB_PATH
      - name: "npm ci"
        run: npm ci
      - name: "npm run build"
        run: npm run build
      - name: Build site with Hugo
        run: hugo --gc --minify
      - name: Upload from public_html via FTP
        uses: airvzxf/ftp-deployment-action@latest
        with:
          server: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local_dir: "./public_html"
          remote_dir: "/home/nyccivil/public_html/site-preview/"
          delete: "true"
          ftp_ssl_allow: true
          ftp_use_feat: true
